from bot.messages.guesses.enums import Answer
from bot.texts.utils import bold
from bot.users.models import User


def get_profile_text(user: User) -> str:
    """
    –¢–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ
    """
    currency = Answer.convert_score_to_currency(user.points)
    points_info = f"{int(user.points)} (~{currency} ‚ÇΩ)"
    return (
        f"üë§ –ò–º—è: {bold(user.name)}\n\n"
        f"üéà –ë–∞–ª–ª–æ–≤: {bold(points_info)}\n\n"
        f"üî¢ –í–æ–∑—Ä–∞—Å—Ç: {bold(user.age)}\n\n"
        f"üåÉ –ì–æ—Ä–æ–¥: {bold(user.city)}"
    )


def get_user_profile_caption(rater: User, rated: User) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∞–Ω–∫–µ—Ç—ã –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    base_caption = f"{rated.name}, {rated.city}"

    if rater.instagram:
        base_caption += f", Instagram: <code>{rated.instagram}</code>"

    if not rater.config.guess_age:
        base_caption += f", {rater.age} –ª–µ—Ç"

    return base_caption


def get_user_link(user: User) -> str:
    return f"@{user.username}" if user.username else f'<a href="tg://user?id={user.user_id}">{user.user_id}</a>'
