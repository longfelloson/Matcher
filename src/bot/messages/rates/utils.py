from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession

from bot.loader import bot
from bot.messages.rates import crud
from bot.messages.rates.enums import RateType
from bot.messages.rates.keyboards import notification_keyboard
from bot.messages.rates.schemas import Rate
from bot.users.models import User


async def react_for_user_rate(
    message: Message,
    user: User,
    state: FSMContext,
    session: AsyncSession,
) -> None:
    """–†–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –æ—Ü–µ–Ω–∫—É —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫"""
    data = await state.get_data()
    rate = Rate(
        rater=user.user_id,
        rated=data["user_for_rate"].user_id,
        rate_type=RateType.positive if message.text == "‚ù§" else RateType.negative,
    )
    if rate.rate_type == RateType.positive:
        await send_notification(
            rated=data["user_for_rate"],
            text="–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ ü•∞",
            keyboard=notification_keyboard(rate.rater)
        )

    await crud.add_rate(rate, session)


async def send_notification(rated: User, text: str, keyboard=None) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è"""
    await bot.send_message(
        chat_id=rated.user_id,
        text=text,
        reply_markup=keyboard
    )
