import asyncio

from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession

from bot.keyboards import market_link_keyboard
from bot.messages.enums import Answer, ChangeProfileAnswer
from bot.messages.registration.utils import set_previous_state
from bot.texts.users import get_profile_text
from bot.users import crud as users_crud
from bot.users.configs import crud as configs_crud
from bot.users.enums import UserStatus
from bot.users.keyboards import (
    user_profile_keyboard,
    change_user_profile_section_keyboard,
)
from bot.users.models import User
from bot.users.states import UserStates
from bot.users.utils import send_user_to_react
from market.auth.token import get_auth_link

router = Router(name="Messages")


@router.message(F.text.in_({"‚Ü©Ô∏è", "‚Ü©"}))
async def back_button_handler(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –ª—é–±–æ–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    """
    await set_previous_state(message, state)


@router.message(F.text == "–ù–∞—á–∞—Ç—å ‚ñ∂Ô∏è")
async def view_user_button_handler(
        message: Message,
        session: AsyncSession,
        state: FSMContext,
        user: User,
):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç" –∏ –≤—ã–¥–∞—á–∞ —Ñ–æ—Ç–æ –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏–ª–∏ –æ—Ü–µ–Ω–∫–∏
    """
    await send_user_to_react(message, user, session, state)


@router.message(F.text == "–ú–∞–≥–∞–∑–∏–Ω üõç")
async def market_button_handler(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–∞–≥–∞–∑–∏–Ω" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    """
    await message.answer(
        text="–ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ–±–º–µ–Ω—è—Ç—å –±–∞–ª–ª—ã ‚§µÔ∏è",
        reply_markup=market_link_keyboard(link=get_auth_link(user_id=message.chat.id)),
    )


@router.message(F.text == "–ü—Ä–æ—Ñ–∏–ª—å üì±")
async def profile_button_handler(
    message: Message,
    user: User,
    state: FSMContext,
) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å"
    """
    await state.set_state(UserStates.profile)

    # –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ —É—Å–ø–µ–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ S3
    if not user.photo_url:
        await asyncio.sleep(2)

    await message.answer_photo(
        photo=user.photo_url,
        caption=get_profile_text(user),
        reply_markup=user_profile_keyboard(user.config.guess_age, user.status)
    )


@router.message(UserStates.profile, F.text.regexp("–£–≥–∞–¥—ã–≤–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç"))
async def change_user_guess_age_button_handler(
        message: Message,
        user: User,
        session: AsyncSession,
):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–≥–∞–¥—ã–≤–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç"""
    new_value = False if message.text == "–£–≥–∞–¥—ã–≤–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç: ‚úÖ" else True
    answer = Answer.user_guesses_age if new_value else Answer.user_not_guesses_age

    await configs_crud.update_user_config(
        message.chat.id, column_name="guess_age", session=session
    )

    config = await configs_crud.get_user_config(message.chat.id, session)
    await message.answer(answer, reply_markup=user_profile_keyboard(config.guess_age, user.status))


@router.message(F.text == "–ò–∑–º–µ–Ω–∏—Ç—å üìù")
async def change_user_profile_button_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"""
    await state.set_state(UserStates.change_profile)
    await message.answer(
        ChangeProfileAnswer.change_profile,
        reply_markup=change_user_profile_section_keyboard(),
    )


@router.message(F.text == "–û—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É üò¥")
async def turn_off_user(message: Message, user: User, session: AsyncSession):
    """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞"""
    await users_crud.update_user(user.user_id, session, status=UserStatus.not_active)
    await message.answer(
        text="–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞, —Å–∫–æ—Ä–µ–µ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è üòá",
        reply_markup=user_profile_keyboard(user.config.guess_age, UserStatus.not_active)
    )


@router.message(F.text == "–í–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É üöÄ")
async def turn_off_user(message: Message, user: User, session: AsyncSession):
    """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞"""
    await users_crud.update_user(user.user_id, session, status=UserStatus.active)
    await message.answer(
        text="–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞, –±—ã—Å—Ç—Ä–µ–µ –Ω–∞—á–∏–Ω–∞–π –æ—Ü–µ–Ω–∏–≤–∞—Ç—å ü§©",
        reply_markup=user_profile_keyboard(user.config.guess_age, UserStatus.active)
    )
