from aiogram.types import (
    InlineKeyboardMarkup as InlineKeyboard,
    InlineKeyboardButton as InlineButton,
    WebAppInfo,
)
from aiogram.types import (
    ReplyKeyboardMarkup as Keyboard,
    KeyboardButton as Button,
)
from aiogram.utils.keyboard import (
    InlineKeyboardBuilder as InlineBuilder,
    ReplyKeyboardBuilder as Builder,
)

from bot.adminpanel.enums import AdminAction
from config import settings
from market.auth.token import get_auth_link


def main_keyboard() -> Keyboard:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    builder = Builder().row(Button(text="–ù–∞—á–∞—Ç—å ‚ñ∂Ô∏è"))
    builder.row(Button(text="–ü—Ä–æ—Ñ–∏–ª—å üì±"))
    #  builder.row(Button(texts="–ú–∞–≥–∞–∑–∏–Ω üõç"))
    return builder.as_markup(resize_keyboard=True)


def help_command_keyboard() -> InlineKeyboard:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –≤—ã–∑–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    """
    keyboard = [
        [
            InlineButton(
                text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öô", url=f"t.me/{settings.BOT.SUPPORT_ACCOUNT_USERNAME}"
            )
        ]
    ]
    return InlineKeyboard(inline_keyboard=keyboard)


def manage_user_keyboard(reporter: int, reported: int) -> InlineKeyboard:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    builder = InlineBuilder().row(
        InlineButton(
            text="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å üîê",
            callback_data=f"{AdminAction.ban_user}*{reporter}*{reported}",
        )
    )
    return builder.as_markup()


def market_link_keyboard(user_id: int) -> InlineKeyboard:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ä–∫–µ—Ç
    """
    link_with_auth_token = get_auth_link(user_id)
    builder = InlineBuilder().row(
        InlineButton(
            text="üîó",
            web_app=WebAppInfo(url=settings.MARKET.MARKET_LINK + link_with_auth_token),
        )
    )
    return builder.as_markup()
